#include <stdio.h>
#include <stdlib.h>

#include <llvm-c/Disassembler.h>
#include <llvm-c/Target.h>

int main()
{
    int rc = -1;
    uint8_t code[] = {
        0x5B, 0x6A, 0x01, 0x68, 0x0C, 0x00, 0x40, 0x00, 0x50, 0x68, 0xAC, 0x6B, 0x21, 0x00, 0x51, 0x41,
        0x57, 0xBF, 0x00, 0x00, 0x80, 0x00, 0x6A, 0x07, 0x5A, 0xBE, 0xAC, 0x6B, 0x21, 0x00, 0x6A, 0x32,
        0x41, 0x5A, 0x45, 0x29, 0xC0, 0x6A, 0x09, 0x58, 0x0F, 0x05, 0x39, 0xC7, 0x0F, 0x85, 0xF5, 0xFE,
        0xFF, 0xFF, 0xBE, 0x00, 0x00, 0x40, 0x00, 0x89, 0xFA, 0x29, 0xF2, 0x74, 0x15, 0x01, 0xD5, 0x01,
        0x54, 0x24, 0x08, 0x01, 0x54, 0x24, 0x18, 0x89, 0xD9, 0x29, 0xF1, 0xC1, 0xE9, 0x03, 0xFC, 0xF3,
        0x48, 0xA5, 0x97, 0x48, 0x89, 0xDE, 0x50, 0x92, 0xAD, 0x50, 0x48, 0x89, 0xE1, 0xAD, 0x97, 0xAD,
        0x44, 0x0F, 0xB6, 0xC0, 0x48, 0x87, 0xFE, 0xFF, 0xD5, 0x59, 0xC3
    };

    LLVMInitializeAllTargetInfos();
    LLVMInitializeAllTargetMCs();
    LLVMInitializeAllDisassemblers();

    LLVMDisasmContextRef dc = LLVMCreateDisasm ("x86_64-unknown-linux-gnu", 
        NULL, 0, NULL, NULL);

    if (dc == NULL) {
        printf("ERROR: LLVMCreateDisasm()");
        goto cleanup;
    }

    for(unsigned int offs=0; offs<sizeof(code); ) {
        char mnemonic[256] = {0};

        size_t insn_len = LLVMDisasmInstruction(
            dc, /* disasm context */
            code + offs, /* source data */ 
            sizeof(code) - offs, /* length of source data */ 
            offs, /* address */ 
            mnemonic, /* output buf */
            sizeof(mnemonic) /* size of output buf */
        );

        if(insn_len <= 0) {
            printf("%04X: undefined?\n", offs);
            break;
        }
        else {
            printf("%04X: %s\n", offs, mnemonic);
        }

        offs += insn_len;
    }

    rc = 0;
    cleanup:
    return rc;
}
